const Joi = require('joi');
const { objectId } = require('../custom.validation');

const create = {
  body: Joi.object().keys({
    name: Joi.string().required(),
    trade_name: Joi.string(),
    family: Joi.string().custom(objectId),
    sub_family: Joi.string().custom(objectId),
    legal_name: Joi.string(),
    comments: Joi.string(),
    description: Joi.string(),
    packaging_description: Joi.string(),
    state_of_product: Joi.string().custom(objectId),
    EAN: Joi.string(),
    EAN_package: Joi.string(),
    EAN_pallet: Joi.string(),
    net_quantity: Joi.number(),
    net_quantity_unit: Joi.string().custom(objectId),
    net_weight: Joi.number(),
    net_weight_unit: Joi.string().custom(objectId),
    net_volume: Joi.number(),
    net_volume_unit: Joi.string().custom(objectId),
    density: Joi.number(),
    drained_weight: Joi.number(),
    product_loss: Joi.number(),
    serving_size: Joi.number(),
    serving_size_unit: Joi.string().custom(objectId),
    ERP_code: Joi.string(),
    serving_size_text: Joi.string(),
    number_of_servings: Joi.number(),
    use_by_date: Joi.date(),
    best_before_date: Joi.date(),
    best_before_date_unit: Joi.string(),
    period_after_opening: Joi.number(),
    period_after_opening_unit: Joi.string(),
    minimum_life_delivery: Joi.number(),
    minimum_life_delivery_unit: Joi.string(),
    storage_conditions: Joi.string().custom(objectId),
    precaution_of_use: Joi.array(),
    preparation_tips: Joi.string(),
    selling_price_per_sales_unit: Joi.number(),
    cost_per_sales_unit: Joi.number(),
    projected_quantity: Joi.number(),
    profitability: Joi.number(),
    created_by: Joi.string().custom(objectId),
    updated_by: Joi.string().custom(objectId),
    geographicalOrigin: Joi.array(),
    target_markets: Joi.array(),
    currency: Joi.string().custom(objectId),
    drained_weight_unit: Joi.string().custom(objectId),
    documentsId: Joi.string(),
    suppliers: Joi.array(),
    plants: Joi.array(),
    certificate_date: Joi.date(),
    number_of_products_per_box: Joi.number(),
    number_of_layers_per_pallet: Joi.number(),
    number_of_boxes_per_layer: Joi.number(),
    number_of_boxes_per_last_layer: Joi.number(),
    number_of_boxes_per_pallet: Joi.number(),
    pallet_height: Joi.number(),
    pallet_height_unit: Joi.string().custom(objectId),
    number_of_pallets_on_ground: Joi.number(),
    stacking_maximun_weight: Joi.number(),
    stacking_maximun_weight_unit: Joi.string().custom(objectId),
    tare: Joi.number(),
    tare_unit: Joi.string().custom(objectId),
    effective_from: Joi.date(),
    effective_to: Joi.date(),
    packaging_height: Joi.number(),
    packaging_height_unit: Joi.string().custom(objectId),
    packaging_width: Joi.number(),
    packaging_width_unit: Joi.string().custom(objectId),
    packaging_depth: Joi.number(),
    packaging_depth_unit: Joi.string().custom(objectId),
    pallet_width: Joi.number(),
    pallet_width_unit: Joi.string().custom(objectId),
    pallet_depth: Joi.number(),
    pallet_depth_unit: Joi.string().custom(objectId),
  }),
};

const query = {
  query: Joi.object().keys({
    name: Joi.string(),
    trade_name: Joi.string(),
    family: Joi.string().custom(objectId),
    sub_family: Joi.string().custom(objectId),
    legal_name: Joi.string(),
    comments: Joi.string(),
    description: Joi.string(),
    packaging_description: Joi.string(),
    state_of_product: Joi.string().custom(objectId),
    EAN: Joi.string(),
    EAN_package: Joi.string(),
    EAN_pallet: Joi.string(),
    net_quantity: Joi.number(),
    net_quantity_unit: Joi.string().custom(objectId),
    net_weight: Joi.number(),
    net_weight_unit: Joi.string().custom(objectId),
    net_volume: Joi.number(),
    net_volume_unit: Joi.string().custom(objectId),
    density: Joi.number(),
    drained_weight: Joi.number(),
    product_loss: Joi.number(),
    serving_size: Joi.number(),
    serving_size_unit: Joi.string().custom(objectId),
    drained_weight_unit: Joi.string().custom(objectId),
    ERP_code: Joi.string(),
    serving_size_text: Joi.string(),
    number_of_servings: Joi.number(),
    use_by_date: Joi.date(),
    best_before_date: Joi.date(),
    best_before_date_unit: Joi.string(),
    period_after_opening: Joi.number(),
    period_after_opening_unit: Joi.string(),
    minimum_life_delivery: Joi.number(),
    minimum_life_delivery_unit: Joi.string(),
    storage_conditions: Joi.string().custom(objectId),
    precaution_of_use: Joi.array(),
    preparation_tips: Joi.string(),
    selling_price_per_sales_unit: Joi.number(),
    cost_per_sales_unit: Joi.number(),
    currency: Joi.string().custom(objectId),
    projected_quantity: Joi.number(),
    profitability: Joi.number(),
    created_by: Joi.string().custom(objectId),
    updated_by: Joi.string().custom(objectId),
    geographicalOrigin: Joi.array(),
    target_markets: Joi.array(),
    sortBy: Joi.string(),
    limit: Joi.number().integer(),
    page: Joi.number().integer(),
    created_by: Joi.string().custom(objectId),
    updated_by: Joi.string().custom(objectId),
    q: Joi.string().allow(null, ''),
    documentsId: Joi.string(),
  }),
};

const getById = {
  params: Joi.object().keys({
    finsihedProductId: Joi.string().custom(objectId),
  }),
};

const updateById = {
  params: Joi.object().keys({
    finsihedProductId: Joi.required().custom(objectId),
  }),
  body: Joi.object()
    .keys({
      name: Joi.string(),
      trade_name: Joi.string(),
      family: Joi.string().custom(objectId),
      sub_family: Joi.string().custom(objectId),
      legal_name: Joi.string(),
      comments: Joi.string(),
      description: Joi.string(),
      packaging_description: Joi.string(),
      state_of_product: Joi.string().custom(objectId),
      EAN: Joi.string(),
      EAN_package: Joi.string(),
      EAN_pallet: Joi.string(),
      net_quantity: Joi.number(),
      net_quantity_unit: Joi.string().custom(objectId),
      net_weight: Joi.number(),
      net_weight_unit: Joi.string().custom(objectId),
      net_volume: Joi.number(),
      net_volume_unit: Joi.string().custom(objectId),
      density: Joi.number(),
      drained_weight: Joi.number(),
      product_loss: Joi.number(),
      serving_size: Joi.number(),
      serving_size_unit: Joi.string().custom(objectId),
      ERP_code: Joi.string(),
      serving_size_text: Joi.string(),
      number_of_servings: Joi.number(),
      use_by_date: Joi.date(),
      best_before_date: Joi.date(),
      best_before_date_unit: Joi.string(),
      period_after_opening: Joi.number(),
      period_after_opening_unit: Joi.string(),
      minimum_life_delivery: Joi.number(),
      minimum_life_delivery_unit: Joi.string(),
      storage_conditions: Joi.string().custom(objectId),
      precaution_of_use: Joi.array(),
      preparation_tips: Joi.string(),
      selling_price_per_sales_unit: Joi.number(),
      cost_per_sales_unit: Joi.number(),
      projected_quantity: Joi.number(),
      profitability: Joi.number(),
      created_by: Joi.string().custom(objectId),
      updated_by: Joi.string().custom(objectId),
      geographicalOrigin: Joi.array(),
      target_markets: Joi.array(),
      currency: Joi.string().custom(objectId),
      drained_weight_unit: Joi.string().custom(objectId),
      documentsId: Joi.string(),
      suppliers: Joi.array(),
      plants: Joi.array(),
      certificate_date: Joi.date(),
      number_of_products_per_box: Joi.number(),
      number_of_layers_per_pallet: Joi.number(),
      number_of_boxes_per_layer: Joi.number(),
      number_of_boxes_per_last_layer: Joi.number(),
      number_of_boxes_per_pallet: Joi.number(),
      pallet_height: Joi.number(),
      pallet_height_unit: Joi.string().custom(objectId),
      number_of_pallets_on_ground: Joi.number(),
      stacking_maximun_weight: Joi.number(),
      stacking_maximun_weight_unit: Joi.string().custom(objectId),
      tare: Joi.number(),
      tare_unit: Joi.string().custom(objectId),
      effective_from: Joi.date(),
      effective_to: Joi.date(),
      packaging_height: Joi.number(),
      packaging_height_unit: Joi.string().custom(objectId),
      packaging_width: Joi.number(),
      packaging_width_unit: Joi.string().custom(objectId),
      packaging_depth: Joi.number(),
      packaging_depth_unit: Joi.string().custom(objectId),
      pallet_width: Joi.number(),
      pallet_width_unit: Joi.string().custom(objectId),
      pallet_depth: Joi.number(),
      pallet_depth_unit: Joi.string().custom(objectId),
    })
    .min(1),
};

const deleteById = {
  params: Joi.object().keys({
    finsihedProductId: Joi.string().custom(objectId),
  }),
};

module.exports = {
  create,
  query,
  getById,
  updateById,
  deleteById,
};
